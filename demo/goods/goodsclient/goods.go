// Code generated by goctl. DO NOT EDIT.
// Source: goods.proto

package goodsclient

import (
	"context"

	"goods/rpc/goods"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetGoodsByIdsRequest  = goods.GetGoodsByIdsRequest
	GetGoodsByIdsResponse = goods.GetGoodsByIdsResponse
	GoodsInfo             = goods.GoodsInfo
	UpdateStockReq        = goods.UpdateStockReq
	UpdateStockRequest    = goods.UpdateStockRequest
	UpdateStockResponse   = goods.UpdateStockResponse

	Goods interface {
		GetGoodsByIds(ctx context.Context, in *GetGoodsByIdsRequest, opts ...grpc.CallOption) (*GetGoodsByIdsResponse, error)
		UpdateStock(ctx context.Context, in *UpdateStockRequest, opts ...grpc.CallOption) (*UpdateStockResponse, error)
	}

	defaultGoods struct {
		cli zrpc.Client
	}
)

func NewGoods(cli zrpc.Client) Goods {
	return &defaultGoods{
		cli: cli,
	}
}

func (m *defaultGoods) GetGoodsByIds(ctx context.Context, in *GetGoodsByIdsRequest, opts ...grpc.CallOption) (*GetGoodsByIdsResponse, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.GetGoodsByIds(ctx, in, opts...)
}

func (m *defaultGoods) UpdateStock(ctx context.Context, in *UpdateStockRequest, opts ...grpc.CallOption) (*UpdateStockResponse, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.UpdateStock(ctx, in, opts...)
}
